@using GR.Core.Extensions;
@using GR.Crm.Organizations.Abstractions.ViewModels.OrganizationsViewModels;
@model GetOrganizationViewModel

@{
	ViewData["Title"] = Model.Name;
}

<OrgDetails />

@section Scripts {
	<script src="~/themes/gear/js/components/table/table.js"></script>
	<script src="~/themes/gear/js/components/modal.js"></script>
	<script src="~/themes/gear/js/components/textBlock.js"></script>
	<script src="~/themes/gear/js/components/form-controls/textarea.js"></script>
	<script src="~/themes/gear/js/components/form-controls/input.js"></script>
	<script src="~/themes/gear/js/components/form-controls/select.js"></script>
	<script src="~/themes/gear/js/modalForms/organizationModalForm.js"></script>
	<script type="text/x-template" id="page-template">
		<div>
			<ul class="nav nav-tabs content-header-tabs ml-40px mr-0">
				<li class="nav-item">
					<a class="nav-link active" data-toggle="tab" href="#details-tab" role="tab" aria-controls="details-tab" aria-selected="true">@Localizer["details"]</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" data-toggle="tab" href="#leads-tab" role="tab" aria-controls="leads-tab" aria-selected="false">@Localizer["leads"]</a>
				</li>
				<li class="nav-item">
					<a class="nav-link" data-toggle="tab" href="#contacts-tab" role="tab" aria-controls="contacts-tab" aria-selected="false">@Localizer["contacts"]</a>
				</li>
			</ul>
			<div class="tab-content" id="myTabContent">
				<div class="tab-pane fade show active" id="details-tab">
					<div class="col-lg-6 bg-white border rounded py-15 px-20 ml-40px">
						<div class="d-flex">
							<h6>@Localizer["details_overview"]</h6>
							<div class="ml-auto">
								<a href="#" class="details-page-actions" data-toggle="dropdown">
									<i data-feather="more-vertical"></i>
								</a>
								<div class="dropdown-menu">
									<a class="dropdown-item" @@click="openModal" href="#">Edit</a>
								</div>
							</div>
						</div>
						<hr class="hr-description">
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_org_name"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.Name</p>
							</div>
						</div>
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_org_industry"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.Industry?.Name</p>
							</div>
						</div>
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_org_nr_employees"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.Employee</p>
							</div>
						</div>
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_org_website"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.WebSite</p>
							</div>
						</div>
						@*<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_tva_code"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.CodTva</p>
							</div>
						</div>*@
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_swift_code"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.CodSwift</p>
							</div>
						</div>
						@*<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_afiliat"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.Afiliat</p>
							</div>
						</div>*@
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_work_category"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black" v-for="wc in orgObject.OrganizationWorkCategories">{{wc.WorkCategory.Name}}</p>
							</div>
						</div>
						<h6 class="mt-3">@Localizer["details_contact_details"]</h6>
						<hr class="hr-description">
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_email"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.Email</p>
							</div>
						</div>
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_phone"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.Phone</p>
							</div>
						</div>
						<h6 class="mt-3">@Localizer["details_address"]</h6>
						<template v-for="x in orgObject.adresses">
							<hr class="hr-description">
							<div class="row no-gutters">
								<div class="col-fixed-220">
									<p class="p-sm mb-0">@Localizer["system_region"]</p>
								</div>
								<div class="d-block mb-sm-0 mb-1">
									<p class="p-sm mb-0 color-black">{{ x.City?.Region?.Name }}</p>
								</div>
							</div>
							<div class="row no-gutters">
								<div class="col-fixed-220">
									<p class="p-sm mb-0">@Localizer["system_city"]</p>
								</div>
								<div class="d-block mb-sm-0 mb-1">
									<p class="p-sm mb-0 color-black">{{ x.City?.Name }}</p>
								</div>
							</div>
							<div class="row no-gutters">
								<div class="col-fixed-220">
									<p class="p-sm mb-0">@Localizer["system_street"]</p>
								</div>
								<div class="d-block mb-sm-0 mb-1">
									<p class="p-sm mb-0 color-black">{{ x.Street }}</p>
								</div>
							</div>
							<div class="row no-gutters mb-2">
								<div class="col-fixed-220">
									<p class="p-sm mb-0">@Localizer["system_zip"]</p>
								</div>
								<div class="d-block mb-sm-0 mb-1">
									<p class="p-sm mb-0 color-black">{{ x.Zip }}</p>
								</div>
							</div>
						</template>
						<h6 class="mt-3">@Localizer["details_bank_details"]</h6>
						<hr class="hr-description">
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_bank"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.Bank</p>
							</div>
						</div>
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_iban_code"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.IBANCode</p>
							</div>
						</div>
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_fiscal_code"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.FiscalCode</p>
							</div>
						</div>
						<h6 class="mt-3">@Localizer["details_organization"]</h6>
						<hr class="hr-description">
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_org_type"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Model.ClientType</p>
							</div>
						</div>
						<div class="row no-gutters">
							<div class="col-fixed-220">
								<p class="p-sm mb-0">@Localizer["details_org_status"]</p>
							</div>
							<div class="d-block mb-sm-0 mb-1">
								<p v-if="orgObject.isDeleted" class="p-sm mb-0 color-black">Inactive</p>
								<p v-else class="p-sm mb-0 color-black">Active</p>
							</div>
						</div>
						<h6 class="mt-3">@Localizer["details_description"]</h6>
						<hr class="hr-description">
						<div class="row no-gutters">
							<div class="d-block mb-sm-0 mb-1">
								<p class="p-sm mb-0 color-black">@Html.Raw(Model.Description)</p>
							</div>
						</div>
					</div>
				</div>
				<div class="tab-pane fade" id="leads-tab" role="tabpanel" aria-labelledby="profile-tab">
					<Leads />
				</div>
				<div class="tab-pane fade" id="contacts-tab" role="tabpanel" aria-labelledby="contact-tab">
					<Contacts />
				</div>
			</div>
			<OrganizationModalForm ref="modals" :editable="true" @@action="modalAction" />
		</div>
	</script>
	<script>
		const orgObject = JSON.parse(`@Html.Raw(Model.SerializeAsJson())`);
		Vue.component('Leads', {
			template: `
				<Table
					:fields="tableFields"
					:apiUrl="apiUrl"
					:httpMethod="httpMethod"
					tableId="organizations-table"
					:sortOrder="tableConfig.sortCol"
					:initialPageSize="20"
					:reload="tableKey"
					:customQueryparams="{organizationId: orgId}"
					:hasCustomQUeryparams="true"
					dataPath="result"
				>
					<slot slot="value" slot-scope="props">
						{{ props.rowData.value }} {{ props.rowData.currency ? props.rowData.currency.symbol : '' }}
					</slot>
					<slot slot="pipeLine" slot-scope="props">
						{{ props.rowData.pipeLine ? props.rowData.pipeLine.name : '' }}
					</slot>
					<slot slot="name" slot-scope="props">
						<a :href="'/leads/details?id=' + props.rowData.id" @@click.stop>
							{{ props.rowData.name }}
						</a>
					</slot>
					<slot slot="leadMembers" slot-scope="props">
						<a
							v-if="props.rowData.leadMembers"
							class="btn btn-outline-primary user-rectangle"
							href="#"
							@@click.stop.prevent
							:title="extractTeamOwnerName(props.rowData.leadMembers).fullName"
							>
							{{ props.rowData.leadMembers ? extractTeamOwnerName(props.rowData.leadMembers).initials : '' }}
						</a>
					</slot>
					<slot slot="stage" slot-scope="props">
						{{ props.rowData.stage ? props.rowData.stage.name : ''}}
					</slot>
				</Table>
			`,
			data() {
				return {
					orgId: orgObject.id,
					apiUrl: apiEndpoints.Leads.GetPaginatedLeadsByOrganizationId,
					httpMethod: 'get',
					tableFields: [
						{
							name: 'name',
							title: 'Name',
							sortField: 'name',
							visible: true
						},
						{
							name: 'value',
							title: 'Value',
							sortField: 'value',
							visible: true
						},
						{
							name: 'pipeLine',
							title: 'Pipeline',
							visible: true
						},
						{
							name: 'stage',
							title: 'Stage',
							visible: true
						},
						{
							name: 'leadMembers',
							title: 'Owner',
							visible: true,
							dataClass: 'td-users'
						},
						{
							name: 'isDeleted',
							title: 'Status',
							sortField: 'isDeleted',
							visible: true
						},
						{
							name: 'dueDate',
							title: 'Due date',
							sortField: 'dueDate',
							visible: true
						}
					],
					tableConfig: {
						currentPage: 0,
						pageSize: 10,
						rowCount: 0,
						sortCol: [
							{
								field: 'name',
								sortField: 'name',
								direction: 'asc'
							}
						]
					},
					tableKey: 0,
					defaultOwnerRoleId: '11447a80-eff9-4f68-b24f-353ab2d5ee92'
				}
			},
			methods: {
				extractTeamOwnerName(team) {
					let owner = this.findObjectByPropValue(team, this.defaultOwnerRoleId, 'teamRoleId');
					let teamOwnerName = {
						initials: '',
						fullName: '',
					}
					if (owner) {
						teamOwnerName = {
							initials: this.initials(owner.firstName, owner.lastName),
							fullName: `${owner.firstName} ${owner.lastName}`
						}
					}
					return teamOwnerName;
				},
				initials(name, surname) {
					return name && surname ? `${name.charAt(0)} ${surname.charAt(0)}` : 'UP';
				},
				action(action) {
					if (action.key == 'delete') {
						this.deleteOrganizations(action.value);
					} else if (action.key == 'edit') {
						console.log('i will edit');
					}
				},
				findObjectByPropValue(array, value, prop) {
					return array.find(x => x[prop] === value);
				}
			}
		});
		Vue.component('Contacts', {
			template: `<Table
				:fields="tableFields"
				:apiUrl="apiUrl"
				:httpMethod="httpMethod"
				@@triggeredMenuAction="action"
				tableId="organizations-table"
				:sortOrder="tableConfig.sortCol"
				:initialPageSize="20"
				:reload="tableKey"
				:customQueryparams="{organizationId: orgId, includeDeleted: true}"
				:hasCustomQUeryparams="true"
				dataPath="result"
				:draggableRows="false"
				:draggableOptions="{}"
			>
				<slot slot="jobPosition" slot-scope="props">
					{{ props.rowData.jobPosition ? props.rowData.jobPosition.name : '' }}
				</slot>
				<slot slot="firstName" slot-scope="props">
					<a :href="'/contact/details?id=' + props.rowData.id" @@click.stop>
						{{ props.rowData.firstName }} {{ props.rowData.lastName }}
					</a>
				</slot>
			</Table>`,
			data() {
				return {
					orgId: orgObject.id,
					apiUrl: apiEndpoints.Contact.GetContactByOrganizationId,
					httpMethod: 'get',
					tableFields: [
						{
							name: 'firstName',
							title: 'First name',
							visible: true
						},
						{
							name: 'email',
							title: 'Email',
							visible: true
						},
						{
							name: 'phone',
							title: 'Phone',
							visible: true
						},
						{
							name: 'jobPosition',
							title: 'Job position',
							visible: true
						}
					],
					tableConfig: {
						currentPage: 0,
						pageSize: 10,
						rowCount: 0,
						sortCol: [
							{
								field: 'name',
								sortField: 'name',
								direction: 'asc'
							}
						]
					},
					tableKey: 0
				}
			},
			methods: {
				action(action) {
					if (action.key == 'deactivate') {
						this.deleteOrganizations(action.value);
					} else if (action.key == 'edit') {
						console.log('i will edit');
					}
				}
			}
		});
		Vue.component('OrgDetails', {
			template: '#page-template',
			data() {
				return {
					orgObject
				}
			},
			beforeCreate() {
				const breadcrumbs = [
					'Clients',
					`<a href="/organizations">Organisations</a>`,
					`@Model.Name`
				]
				this.$store.dispatch("setCustomBreadcrumbsAction", breadcrumbs);
			},
			mounted() {
				feather.replace({
					width: 17,
					height: 17,
				});
			},
			methods: {
				openModal() {
					this.$refs['modals'].editOrganization('@Model.Id');
				},
				modalAction() {
					location.reload();
				}
			}
		});
	</script>
}